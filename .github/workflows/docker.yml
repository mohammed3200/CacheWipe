name: Build and Push Docker Image

on:
    push:
        branches: [main, master]
        tags: ["v*"]
    pull_request:
        branches: [main]
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
    GO_VERSION: "1.21"

jobs:
    docker:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=sha,prefix={{branch}}-

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      GO_VERSION=${{ env.GO_VERSION }}

    test-docker:
        name: Test Docker Image
        runs-on: ubuntu-latest
        needs: docker
        if: github.event_name == 'pull_request'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Build Docker image for testing
              run: |
                  docker build -t cache-wipe-test .

            - name: Test Docker image
              run: |
                  # Test that the container starts
                  docker run --rm cache-wipe-test --help || true

                  # Check that binary exists and is executable
                  docker run --rm cache-wipe-test ls -la /app/cache-wipe
